# Generated by Django 2.1.7 on 2020-03-03 08:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import voucher.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='expense_voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Activity_id', models.CharField(default=voucher.models.increment_Activity_id, max_length=100, null=True)),
                ('employee_id', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_fname', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_lname', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_group', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_cost', models.CharField(blank=True, max_length=100, null=True)),
                ('new_employee_id', models.CharField(blank=True, max_length=100, null=True)),
                ('new_employee_fname', models.CharField(blank=True, max_length=100, null=True)),
                ('new_employee_lname', models.CharField(blank=True, max_length=100, null=True)),
                ('new_employee_group', models.CharField(blank=True, max_length=100, null=True)),
                ('new_employee_cost', models.CharField(blank=True, max_length=100, null=True)),
                ('fleet_area', models.CharField(blank=True, choices=[('The Globe Tower', 'The Globe Tower'), ('Visayas-Mindanao', 'Visayas-Mindanao')], max_length=100, null=True)),
                ('received_voucher', models.CharField(blank=True, max_length=100, null=True)),
                ('trans_type', models.CharField(blank=True, choices=[('Gas Reimbursements', 'Gas Reimbursements'), ('Car Parts Replacement', 'Car Parts Replacement'), ('GR and CPR', 'GR and CPR')], max_length=100, null=True)),
                ('voucher_no', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_type', models.CharField(blank=True, choices=[('Expense Voucher', 'Expense Voucher'), ('Petty Cash Voucher', 'Petty Cash Voucher'), ('EV and PCV', 'EV and PCV')], max_length=100, null=True)),
                ('fuel_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('fuel_products', models.CharField(blank=True, max_length=100, null=True)),
                ('fuel_liters', models.CharField(blank=True, max_length=100, null=True)),
                ('service_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('work_order', models.CharField(blank=True, max_length=100, null=True)),
                ('plate_number', models.CharField(blank=True, max_length=100, null=True)),
                ('odometer_start', models.CharField(blank=True, max_length=100, null=True)),
                ('odometer_end', models.CharField(blank=True, max_length=100, null=True)),
                ('v_brand', models.CharField(blank=True, choices=[('BMW', 'BMW'), ('Chevrolet', 'Chevrolet'), ('Chrysler', 'Chrysler'), ('Ford', 'Ford'), ('Honda', 'Honda'), ('Hyundai', 'Hyundai'), ('Isuzu', 'Isuzu'), ('Kia', 'Kia'), ('Masda', 'Masda'), ('Mitsubishi', 'Mitsubishi'), ('Nissan', 'Nissan'), ('Peugeot', 'Peugeot'), ('Subaro', 'Subaro')], max_length=100, null=True)),
                ('v_make', models.CharField(blank=True, max_length=100, null=True)),
                ('v_fuel_type', models.CharField(blank=True, max_length=100, null=True)),
                ('v_model', models.CharField(blank=True, max_length=100, null=True)),
                ('new_plate_number', models.CharField(blank=True, max_length=100, null=True)),
                ('new_odometer_start', models.CharField(blank=True, max_length=100, null=True)),
                ('new_odometer_end', models.CharField(blank=True, max_length=100, null=True)),
                ('new_v_brand', models.CharField(blank=True, choices=[('BMW', 'BMW'), ('Chevrolet', 'Chevrolet'), ('Chrysler', 'Chrysler'), ('Ford', 'Ford'), ('Honda', 'Honda'), ('Hyundai', 'Hyundai'), ('Isuzu', 'Isuzu'), ('Kia', 'Kia'), ('Masda', 'Masda'), ('Mitsubishi', 'Mitsubishi'), ('Nissan', 'Nissan'), ('Peugeot', 'Peugeot'), ('Subaro', 'Subaro')], max_length=100, null=True)),
                ('new_v_make', models.CharField(blank=True, max_length=100, null=True)),
                ('new_v_fuel_type', models.CharField(blank=True, max_length=100, null=True)),
                ('new_v_model', models.CharField(blank=True, max_length=100, null=True)),
                ('gt_admin', models.CharField(blank=True, choices=[('Approved', 'Approved')], max_length=100, null=True)),
                ('approval_date', models.CharField(blank=True, max_length=100, null=True)),
                ('immediate_supervisor', models.CharField(blank=True, choices=[('Ser Roy Dela Cruz', 'Ser Roy Dela Cruz'), ('Adolfo Carlos Umali', 'Adolfo Carlos Umali')], max_length=100, null=True)),
                ('im_approval_date', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_docs1', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_docs2', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_docs3', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_forwarded', models.CharField(blank=True, max_length=100, null=True)),
                ('EVO_SLA', models.CharField(max_length=10, null=True)),
                ('date_initiated', models.DateField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Historicalexpense_voucher',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('Activity_id', models.CharField(default=voucher.models.increment_Activity_id, max_length=100, null=True)),
                ('employee_id', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_fname', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_lname', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_group', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_cost', models.CharField(blank=True, max_length=100, null=True)),
                ('new_employee_id', models.CharField(blank=True, max_length=100, null=True)),
                ('new_employee_fname', models.CharField(blank=True, max_length=100, null=True)),
                ('new_employee_lname', models.CharField(blank=True, max_length=100, null=True)),
                ('new_employee_group', models.CharField(blank=True, max_length=100, null=True)),
                ('new_employee_cost', models.CharField(blank=True, max_length=100, null=True)),
                ('fleet_area', models.CharField(blank=True, choices=[('The Globe Tower', 'The Globe Tower'), ('Visayas-Mindanao', 'Visayas-Mindanao')], max_length=100, null=True)),
                ('received_voucher', models.CharField(blank=True, max_length=100, null=True)),
                ('trans_type', models.CharField(blank=True, choices=[('Gas Reimbursements', 'Gas Reimbursements'), ('Car Parts Replacement', 'Car Parts Replacement'), ('GR and CPR', 'GR and CPR')], max_length=100, null=True)),
                ('voucher_no', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_type', models.CharField(blank=True, choices=[('Expense Voucher', 'Expense Voucher'), ('Petty Cash Voucher', 'Petty Cash Voucher'), ('EV and PCV', 'EV and PCV')], max_length=100, null=True)),
                ('fuel_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('fuel_products', models.CharField(blank=True, max_length=100, null=True)),
                ('fuel_liters', models.CharField(blank=True, max_length=100, null=True)),
                ('service_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('work_order', models.CharField(blank=True, max_length=100, null=True)),
                ('plate_number', models.CharField(blank=True, max_length=100, null=True)),
                ('odometer_start', models.CharField(blank=True, max_length=100, null=True)),
                ('odometer_end', models.CharField(blank=True, max_length=100, null=True)),
                ('v_brand', models.CharField(blank=True, choices=[('BMW', 'BMW'), ('Chevrolet', 'Chevrolet'), ('Chrysler', 'Chrysler'), ('Ford', 'Ford'), ('Honda', 'Honda'), ('Hyundai', 'Hyundai'), ('Isuzu', 'Isuzu'), ('Kia', 'Kia'), ('Masda', 'Masda'), ('Mitsubishi', 'Mitsubishi'), ('Nissan', 'Nissan'), ('Peugeot', 'Peugeot'), ('Subaro', 'Subaro')], max_length=100, null=True)),
                ('v_make', models.CharField(blank=True, max_length=100, null=True)),
                ('v_fuel_type', models.CharField(blank=True, max_length=100, null=True)),
                ('v_model', models.CharField(blank=True, max_length=100, null=True)),
                ('new_plate_number', models.CharField(blank=True, max_length=100, null=True)),
                ('new_odometer_start', models.CharField(blank=True, max_length=100, null=True)),
                ('new_odometer_end', models.CharField(blank=True, max_length=100, null=True)),
                ('new_v_brand', models.CharField(blank=True, choices=[('BMW', 'BMW'), ('Chevrolet', 'Chevrolet'), ('Chrysler', 'Chrysler'), ('Ford', 'Ford'), ('Honda', 'Honda'), ('Hyundai', 'Hyundai'), ('Isuzu', 'Isuzu'), ('Kia', 'Kia'), ('Masda', 'Masda'), ('Mitsubishi', 'Mitsubishi'), ('Nissan', 'Nissan'), ('Peugeot', 'Peugeot'), ('Subaro', 'Subaro')], max_length=100, null=True)),
                ('new_v_make', models.CharField(blank=True, max_length=100, null=True)),
                ('new_v_fuel_type', models.CharField(blank=True, max_length=100, null=True)),
                ('new_v_model', models.CharField(blank=True, max_length=100, null=True)),
                ('gt_admin', models.CharField(blank=True, choices=[('Approved', 'Approved')], max_length=100, null=True)),
                ('approval_date', models.CharField(blank=True, max_length=100, null=True)),
                ('immediate_supervisor', models.CharField(blank=True, choices=[('Ser Roy Dela Cruz', 'Ser Roy Dela Cruz'), ('Adolfo Carlos Umali', 'Adolfo Carlos Umali')], max_length=100, null=True)),
                ('im_approval_date', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_docs1', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_docs2', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_docs3', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_forwarded', models.CharField(blank=True, max_length=100, null=True)),
                ('EVO_SLA', models.CharField(max_length=10, null=True)),
                ('date_initiated', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical expense_voucher',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
